<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsicong.enroll.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.wsicong.enroll.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="insert_uid" property="insertUid" jdbcType="INTEGER"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_del" property="isDel" jdbcType="BIT"/>
        <result column="is_job" property="isJob" jdbcType="BIT"/>
        <result column="mcode" property="mcode" jdbcType="VARCHAR"/>
        <result column="send_time" property="sendTime" jdbcType="TIMESTAMP"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, mobile, email, password, insert_uid, insert_time, update_time, is_del, 
    is_job, mcode, send_time, version
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.wsicong.enroll.model.User">
    insert into user (id, username, mobile, 
      email, password, insert_uid, 
      insert_time, update_time, is_del, 
      is_job, mcode, send_time, 
      version)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{insertUid,jdbcType=INTEGER}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=BIT}, 
      #{isJob,jdbcType=BIT}, #{mcode,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.wsicong.enroll.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="insertUid != null">
                insert_uid,
            </if>
            <if test="insertTime != null">
                insert_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="isJob != null">
                is_job,
            </if>
            <if test="mcode != null">
                mcode,
            </if>
            <if test="sendTime != null">
                send_time,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="insertUid != null">
                #{insertUid,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=BIT},
            </if>
            <if test="isJob != null">
                #{isJob,jdbcType=BIT},
            </if>
            <if test="mcode != null">
                #{mcode,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wsicong.enroll.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="insertUid != null">
                insert_uid = #{insertUid,jdbcType=INTEGER},
            </if>
            <if test="insertTime != null">
                insert_time = #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=BIT},
            </if>
            <if test="isJob != null">
                is_job = #{isJob,jdbcType=BIT},
            </if>
            <if test="mcode != null">
                mcode = #{mcode,jdbcType=VARCHAR},
            </if>
            <if test="sendTime != null">
                send_time = #{sendTime,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wsicong.enroll.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      insert_uid = #{insertUid,jdbcType=INTEGER},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT},
      is_job = #{isJob,jdbcType=BIT},
      mcode = #{mcode,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--分页查询用户列表-->
    <select id="getUsers" resultType="com.wsicong.enroll.dto.UserRoleDTO">
        select
        id,
        username,
        mobile,
        email,
        insert_uid,
        insert_time,
        update_time,
        is_del,
        is_job,
        version
        from user
        <where>
            <if test="userSearch.umobile!=null and userSearch.umobile!=''">
                AND mobile =#{userSearch.umobile}
            </if>
            <if test="userSearch.uname!=null and userSearch.uname!=''">
                AND username like CONCAT(CONCAT('%',#{userSearch.uname}),'%')
            </if>
            <if test="userSearch.insertTimeStart!=null and userSearch.insertTimeStart!=''">
                AND insert_time &gt;= #{userSearch.insertTimeStart}
            </if>
            <if test="userSearch.insertTimeEnd!=null and userSearch.insertTimeEnd!=''">
                AND insert_time &lt;= #{userSearch.insertTimeEnd}
            </if>
        </where>
        ORDER BY insert_time DESC
    </select>

    <!--设置用户是否离职-->
    <update id="setJobUser">
		update user
		set
		is_job = #{isJob,jdbcType=INTEGER},
		insert_uid = #{insertUid,jdbcType=INTEGER},
		update_time=NOW(),
		version=version+1
		where id = #{id,jdbcType=INTEGER}
		AND is_del=0
	</update>

    <!--删除用户-->
    <update id="setDelUser">
		update user
		set
		is_del = #{isDel,jdbcType=INTEGER},
		insert_uid = #{insertUid,jdbcType=INTEGER},
		update_time=NOW(),
		version=version + 1
		where id = #{id,jdbcType=INTEGER}
	</update>

    <!--查询用户及对应的角色ids-->
    <resultMap id="getUserRoles" type="com.wsicong.enroll.vo.UserRolesVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="insert_uid" jdbcType="INTEGER" property="insertUid"/>
        <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_del" jdbcType="BIT" property="isDel"/>
        <result column="is_job" jdbcType="BIT" property="isJob"/>
        <result column="version" jdbcType="INTEGER" property="version"/>

        <collection property="userRoles" ofType="com.wsicong.enroll.model.UserRoleKey">
            <result column="user_id" property="userId"/>
            <result column="role_id" property="roleId"/>
        </collection>

    </resultMap>
    <select id="getUserAndRoles" resultMap="getUserRoles">
		select
		u.id,
		u.username,
		u.mobile,
		u.email,
		u.insert_uid insertUid,
		u.insert_time
		insertTime,
		u.update_time updateTime,
		u.is_del isDel,
		u.is_job isJob,
		u.version,
		ur.user_id,
		ur.role_id
		from user u
		LEFT JOIN user_role ur
		ON u.id=ur.user_id
		WHERE u.id=#{id} AND u.is_del=0 AND u.is_job=0
	</select>

    <!--根据用户名和密码查找用户-->
    <select id="findUser" resultType="com.wsicong.enroll.model.User">
		SELECT
		id,
		username,
		mobile,
		email,
		insert_uid insertUid,
		insert_time
		insertTime,
		update_time
		updateTime,
		is_del isDel,
		is_job
		isJob,
		mcode,
		send_time sendTime,
		version
		FROM user
		WHERE username=#{username}
		AND password =#{password}
		AND is_del=0
		AND is_job=0
	</select>

    <!--根据手机号获取用户数据-->
    <select id="findUserByMobile" resultType="com.wsicong.enroll.model.User">
		SELECT
		id, username,
		mobile,password, email, insert_uid insertUid, insert_time
		insertTime,
		update_time, is_del,is_job,mcode,send_time sendTime,version
		from user
		WHERE
		mobile=#{mobile} and is_del=0
	</select>

    <!--根据用户名获取用户数据-->
    <select id="findUserByName" resultType="com.wsicong.enroll.model.User">
		select
		id, username,
		mobile, email, insert_uid insertUid, insert_time
		insertTime,
		update_time updateTime, is_del isDel,is_job
		isJob,mcode,send_time
		sendTime,version
		from user
		WHERE username=#{username} and is_del=0
	</select>

    <!--修改用户密码-->
    <update id="updatePwd">
		update user
		set
		password = #{password},
		update_time=NOW()
		where id = #{id,jdbcType=INTEGER} and is_del=0 AND
		is_job=0
	</update>
</mapper>